## Productions for all agents, regarding common survival
## and interaction with the environment

## In summary, describes only one action: eating.
## (in environment, agents that reach food-satiety 0 are killed)
## Also encodes common initialisation things, like inventory and hunger.

## (avoid generating wait impasses)

## PRE-RUN COMMANDS ###################
waitsnc --enable

## INIT ###############################

sp {AoE*general_agent*init
   (state <s> ^superstate nil)
-->
   (<s> ^inventory <inv1>)
   (<inv1> ^name inventory)
   (<s> ^hunger <hun1>)
   (<hun1> ^name hunger)
}

## INPUT ELABORATIONS ##################

# Elaborate food into inventory
sp {AoE*general_agent*elaborate*how-much-food
   (state <s> ^io <io>
              ^inventory <I>
   )
   (<io> ^input-link.food <f>)
-->
   (<I> ^food <f>)
}

# Elaborate wood into inventory
sp {AoE*general_agent*elaborate*how-much-wood
   (state <s> ^io <io>
              ^inventory <I>
   )
   (<io> ^input-link.wood <w>)
-->
   (<I> ^wood <w>)
}

# Elaborate food satiety
sp {AoE*general_agent*elaborate*how-much-food-satiety
   (state <s> ^io <io>
              ^hunger <h>
   )
   (<io> ^input-link.food-satiety <fs>)
-->
   (<h> ^food-satiety <fs>)
}


## ELABORATION #########################

# Elaborate whether we have food amount
sp {AoE*general_agent*elaborate*has-food
   (state <s> ^inventory <I>)
   (<I> ^food > 0)
-->
   (<I> ^has-food true)
}

# Elaborate how hungry we are by peeking at input
sp {AoE*general_agent*elaborate*moderate-hunger
   (state <s> ^hunger <h>)
   (<h> ^food-satiety < 20)
-->
   (<h> ^hungry true)
}

# Elaborate empty food space (of 5, applicable only to non-barons)
sp {AoE*general_agent*elaborate*empty-food
   (state <s> ^inventory <I>)
   (<I> ^food <f>)
-->
   (<I> ^empty-food (- 5 <f>))
}

sp {AoE*general_agent*elaborate*starving
   (state <s> ^hunger <h>)
   (<h> ^food-satiety < 5)
-->
   (<h> ^starving true)
}


## PROPOSAL #########################

# If we have food, we can eat it
sp {AoE*general_agent*propose*eat-food
   (state <s> ^inventory <I>)
   (<I> ^has-food true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name eat-food)
}


## SELECTION #########################

# If we are moderately hungry, we prefer (10) to eat
sp {AoE*general_agent*select*operator*prefer*eat-food-hungry
   (state <s> ^hunger <h>
              ^operator <o> +) # acceptable operator
   (<o> ^name eat-food)
   (<h> ^hungry true)
-->
   (<s> ^operator <o> = 50)
}

# If we are extremely hungry, we must eat (not using required because of debugging circumstances)
sp {AoE*general_agent*select*operator*prefer*eat-food-starving
   (state <s> ^hunger <h>
              ^operator <o> +) # acceptable operator
   (<o> ^name eat-food)
   (<h> ^starving true)
-->
   (<s> ^operator <o> >)
}

# Extra condition for eating during starvation, any other operator is worse
#  This is done because there are other 'best' operators that are underneath this one.
sp {AoE*general_agent*select*operator*prefer*eat-food-starving-over-all
   (state <s> ^hunger <h>
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name eat-food)
   -(<o2> ^name eat-food)
   (<h> ^starving true)
-->
   (<s> ^operator <o1> > <o2>)
}

## APPLICATION #########################


# If we pick to eat, we request the environment to do so
# (environment should remove our request from pipeline)
sp {AoE*general_agent*apply*operator*eat-food
   (state <s> ^io.output-link <out>
              ^operator.name eat-food)
  -(<out> ^eat-food)
-->
   (<out> ^eat-food true)
}

sp {AoE*general_agent*monitor*operator*eat-food
   (state <s> ^operator.name eat-food)
-->
   (write |Requested environment to eat food| (crlf))
}










######### COMMAND CLEARING ############
# If we have food, we can eat it
sp {AoE*general_agent*propose*destroy-out
   (state <s> ^io <io>)
   (<io> ^input-link.clear output)
-->
   (<s> ^operator <o> + !)
   (<o> ^name clear-out)
}

sp {AoE*general_agent*apply*destroy-out
   (state <s> ^io.output-link <out>
              ^io.input-link <in>
              ^operator <o>
              ^superstate nil
              )
   (<o> ^name clear-out)
   (<in> ^clear output)
   (<out> ^{<command> <> flag} <x>)
-->
   (<out> ^<command> <x> -)
   (<in> ^clear output -)
}