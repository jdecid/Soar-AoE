## Productions for collector agents

## Collector agents can get food/wood
## Collector agents should give up their resources if the lord asks
##   (but will prioritise not dying of starvation)
## Collector agents can get wood by just acting on the environment
## Collector agents can get food by sowing-waiting-harvesting
## Collector agents like to stack up on resources
## Collector will 

# We recommend the environ changes the yields of the fields dynamically (ie, the )

## Operators proposable
# cut-wood
# sow-field ^field <f>
# harvest-field ^field <f>

# rise-no-food-flag
# lower-no-food-flag
#    (both above create flag ^flag no-food in output)
# give-baron <<food wood>> TODO

## INIT #########################

sp {AoE*collector_agent*init
   (state <s> ^superstate nil)
-->
   (<s> ^fields <f>)
   (<f> ^name fields)
}

## INPUT ELABORATIONS ##################

# Elaborate whether I have fields, and their state
sp {AoE*collector*elaborate*has-fields
   (state <s> ^io <io>
              ^fields <f>
   )
   (<io> ^input-link.fields <field>)
-->
   (<f> ^field <field>)
}

# Elaborate whether I have any petition to do
sp {AoE*collector*elaborate*incoming-petitions
   (state <s> ^io <io>)
   (<io> ^input-link.petition <mat>) # <p> should be "wood"&/"food"
-->
   (<s> ^petition <mat>)
}

#Elaborate whether the no-food flag is raised in output
sp {AoE*collector*elaborate*has-raised-flag
   (state <s> ^io <io>
              ^fields <f>
   )
   (<io> ^output-link <o>)
   (<o> ^flag no-food)
-->
   (<s> ^no-food-flag true)
}

## ELABORATION #########################
sp {AoE*general_agent*elaborate*has-wood
   (state <s> ^inventory <I>)
   (<I> ^wood > 0)
-->
   (<I> ^has-wood true)
}

# Elaborate whether the wood inventory is full
sp {AoE*collector*elaborate*wood-inventory-full
   (state <s> ^inventory <I>)
   (<I> ^wood = 5)
-->
   (<I> ^wood-full true)
}

# Elaborate whether the food inventory is full
sp {AoE*collector*elaborate*food-inventory-full
   (state <s> ^inventory <I>)
   (<I> ^empty-food = 0)
-->
   (<I> ^food-full true)
}

## PROPOSAL #########################
# If our wood inventory is not full, we can get wood
sp {AoE*collector*propose*collect-wood
   (state <s> ^inventory <I>)
   -(<I> ^wood-full true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name cut-wood)
}

# If one of our fields is dry (not sown nor harvestable), we can sow it.
sp {AoE*collector*propose*sow-field
   (state <s> ^fields.field <f>)
   (<f> ^state dry)
-->
   (<s> ^operator <o> + =)
   (<o> ^name sow-field 
        ^field <f>)
}

# If one of our fields is harvestable, we can harvest it if we're not food-full
#   but we can harvest it even if we can't get all of the yield.
sp {AoE*collector*propose*harvest-field
   (state <s> ^fields.field <f>
   			  ^inventory <I>
   )
   (<f> ^state harvestable)
   -(<I> ^food-full true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name harvest-field 
        ^field <f>)
}


# FOOD PETITION FLAG:
sp {AoE*collector*propose*no-food-flag-rise
   (state <s>)
   -(<s> ^no-food-flag true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name rise-no-food-flag)
}
sp {AoE*collector*propose*no-food-flag-lower
   (state <s>)
   (<s> ^no-food-flag true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name lower-no-food-flag)
}

# Petition fulfilling
sp {AoE*collector*propose*fulfil-food-demand
   (state <s> ^petition <mat>
              ^inventory <I>
   )
   (<I> ^<mat> >= 2)
-->
   (<s> ^operator <o> + =)
   (<o> ^name give-baron
        ^resource <mat>)
}

## SELECTION #########################

# General guidelines:

# if no food, best thing to do is harvest some
sp {AoE*collector*prefer*harvest-food-if-none
   (state <s> ^inventory <I>
   			  ^operator <o> +)
   (<o> ^name harvest-field)
   -(<I> ^has-food true)
-->
   (<s> ^operator <o> >) # best operator (specific better-worse come before)
}

# if no field sown, best thing to do is sow one
sp {AoE*collector*prefer*sow-food-if-none-growing-or-harvestable
   (state <s> ^fields <f>
   			  ^operator <o> +)
   (<o> ^name sow-field)
   -{ # not exists a field that is in f and is harvestable or sown
	   (<f> ^field <f1>)
	   (<f1> ^state << harvestable sown >>)
   }
-->
   (<s> ^operator <o> >) # best operator (specific better-worse come before)
}


# if no wood, good thing to do is collect some
sp {AoE*collector*prefer*collect-wood-if-none
   (state <s> ^inventory <I>
   			  ^operator <o> +)
   (<o> ^name cut-wood)
   -(<I> ^has-wood true)
   -(<s> ^petition wood)
-->
   (<s> ^operator <o> = 10) # pretty good pick
}

# if we have a wood petition, it's good if we could get some
sp {AoE*collector*prefer*collect-wood-if-none-and-petition
   (state <s> ^inventory <I>
          ^operator <o> +)
   (<o> ^name cut-wood)
   -(<I> ^has-wood true)
   (<s> ^petition wood)
-->
   (<s> ^operator <o> = 100) # excellent pick
}

# if we have a food petition, bias toward getting food
sp {AoE*collector*prefer*food-harvest-if-none-and-petition
   (state <s> ^inventory <I>
          ^operator <o> +)
   (<o> ^name harvest-field)
   (<s> ^petition food)
-->
   (<s> ^operator <o> = 200) # excellence pick
}

# if we have a food petition, bias toward getting food (plan to get some)
sp {AoE*collector*prefer*food-sow-if-none-and-petition
   (state <s> ^inventory <I>
          ^operator <o> +)
   (<o> ^name sow-field)
   (<s> ^petition food)
-->
   (<s> ^operator <o> = 100) # excellent pick
}

# Comparative guidelines:

# We prefer to sow high-yield fields over low-yield
sp {AoE*collector*prefer*high-yield-sow-over-low
   (state <s> ^fields.field <f1> <f2>
   			  ^operator <o1> +
   			  ^operator <o2> +)
   (<o1> ^name sow-field
         ^field <f1>
   )
   (<o2> ^name sow-field
         ^field <f2>
   )
   (<f1> ^yield <y1>)
   (<f2> ^yield <y2> < <y1>)
-->
   (<s> ^operator <o1> > <o2>) # pick sowing the good field
}

# Lower acceptability of harvesting when would overflow food
sp {AoE*collector*prefer*low-yield-harvest-over-high-if-overflow
   (state <s> ^fields.field <f1> <f2>
              ^inventory <I>
   			  ^operator <o1> +
   			  ^operator <o2> +)
   (<o1> ^name harvest-field
         ^field <f1>
   )
   (<o2> ^name harvest-field
         ^field <f2>
   )
   (<f1> ^yield <y1>)
   (<I> ^food <f>)
   (<I> ^empty-food < <y1>) # Overflow
   (<f2> ^yield <y2> < <y1>)
-->
   (<s> ^operator <o1> > <o2>) # pick harvesting the smaller field (minimise loss)
}


# Flag preferences:
# precon: no food, hungry, flag lowered --> want to rise it
sp {AoE*collector*prefer*no-food-flag-should-rise
   (state <s> ^inventory <I>
              ^hunger <h>
              ^operator <o> +)
   (<o> ^name rise-no-food-flag)
   (<I> ^food = 0)
   (<h> ^hungry true)
-->
   (<s> ^operator <o> >)
}

# precon: has some food, flag risen --> should lower it
sp {AoE*collector*prefer*no-food-flag-should-lower
   (state <s> ^inventory <I>
              ^hunger <h>
              ^operator <o> +)
   (<o> ^name lower-no-food-flag)
   (<I> ^empty-food < 2) # reasonable amount of food
-->
   (<s> ^operator <o> >)
}

# Demand preferences
# Best thing is to fulfil the demands
sp {AoE*collector*prefer*fulfil-demands
   (state <s> ^operator <o> +)
   (<o> ^name give-baron)
-->
   (<s> ^operator <o> >)
}

# However, if I have to pick between lowering flag or fulfilling demands, I should fulfil first, then see next time if I should lower
sp {AoE*collector*prefer*prefer-fulfil-demands-over-lower-flag
   (state <s> ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name lower-no-food-flag)
   (<o2> ^name give-baron)
-->
   (<s> ^operator <o2> > <o1>)
}


## APPLICATION #########################
# cut-wood
sp {AoE*collector*apply*operator*cut-wood
   (state <s> ^io.output-link <out>
              ^operator.name cut-wood)
  -(<out> ^cut-wood)
-->
   (<out> ^cut-wood true)
   (write |Requested environment to cut wood| (crlf))
}

# sow-field ^field <f>
sp {AoE*collector*apply*operator*sow-field
   (state <s> ^io.output-link <out>
              ^operator <o>)
   (<o> ^name sow-field
        ^field.id <fid>)
  -(<out> ^sow-field <fid>)
-->
   (<out> ^sow-field <fid>)
   (write |Requested environment to sow field | <fid> (crlf))
}

# harvest-field ^field <f>
sp {AoE*collector*apply*operator*harvest-field
   (state <s> ^io.output-link <out>
              ^operator <o>)
   (<o> ^name harvest-field
        ^field.id <fid>
   )
  -(<out> ^harvest-field <fid>)
-->
   (<out> ^harvest-field <fid>)
   (write |Requested environment to harvest field | <fid> (crlf))
}

# Flag
sp {AoE*collector*apply*operator*rise-flag
   (state <s> ^io.output-link <out>
              ^operator <o>)
   (<o> ^name rise-no-food-flag)
-->
   (<out> ^flag no-food)
   (write |Risen no-food flag| (crlf))
}

sp {AoE*collector*apply*operator*lower-flag
   (state <s> ^io.output-link <out>
              ^operator <o>)
   (<o> ^name lower-no-food-flag)
-->
   (<out> ^flag no-food -)
   (write |Lowered no-food flag| (crlf))
}

sp {AoE*collector*apply*operator*give-food
   (state <s> ^io.output-link <out>
              ^operator <o>)
   (<o> ^name give-baron
        ^resource <mat>
   )
-->
   (<out> ^give-baron <mat>)
   (write |Giving 2 | <mat> | to baron| (crlf))
}